---
execute: 
  freeze: false
---

# Appendix {.unnumbered .appendix}

## Software requirements {.unnumbered}

```{r}
#| label: r-version
#| echo: false
renv <- jsonlite::read_json("renv.lock")
```

This book was built using R version `r renv[[1]]$Version`. This book is built with [Quarto](https://quarto.org/), using version number `r quarto::quarto_version()`. All R packages required to build this book can be found in the following table. Note that this table contains all packages required to create the book, not just those required for the examples.

```{r}
#| label: tbl-package-versions
#| tbl-cap: "R packages and version numbers"
#| echo: false
options(knitr.kable.NA = "")
pkgs <- unlist(lapply(renv[[2]], function(x) x[["Package"]]))
pkg_vs <- unlist(lapply(renv[[2]], function(x) x[["Version"]]))
nr <- ceiling(length(pkgs) / 3)
pkg_df <- tibble::tibble(
  Package = pkgs,
  Version = pkg_vs
)
fill_NA <- as.data.frame(matrix(rep(c(NA, NA), times = nr * 3 - length(pkgs)), ncol = 2))
colnames(fill_NA) <- c("Package", "Version")
padded_pkgs <- rbind(pkg_df[(2 * nr + 1):length(pkgs), ], fill_NA)
new_pkg_df <-
  cbind(pkg_df[1:nr, ], pkg_df[(nr + 1):(2 * nr), ], padded_pkgs)
kableExtra::kbl(
  new_pkg_df,
  longtable = TRUE
) |>
  kableExtra::kable_styling(font_size = 7.5)
```

## Data {.unnumbered}

All data sets used in this book, and links to the relevant licenses:

```{r}
#| label: data-sources
#| echo: false
#| output: asis
data_data <- readr::read_csv("data/data.csv") |> 
  tidyr::drop_na()
for (i in seq_len(nrow(data_data))) {
  pander::pandoc.list(
    list(
      glue::glue("Chapter {data_data$Chapter[i]}"),
      list(
        glue::glue("{data_data$Data[i]} {data_data$BibTex[i]}"),
        glue::glue("Source: [{stringr::str_remove(data_data$URL[i], 'https://')}]({data_data$URL[i]})"),
        glue::glue("License: {data_data$License[i]}")
      )
    )
  )
}
```

## Images {.unnumbered}

All images used in this book (which were not created by the author) and links to the relevant licenses:

```{r}
#| label: img-sources
#| echo: false
#| output: asis
img_data <- readr::read_csv("images/data.csv") |> 
  tidyr::drop_na()
for (i in seq_len(nrow(img_data))) {
  pander::pandoc.list(
    list(
      glue::glue("Chapter {img_data$Chapter[i]}"),
      list(
        glue::glue("Photographer: {img_data$Photographer[i]}"),
        glue::glue("Source: [{stringr::str_remove(img_data$Source[i], 'https://')}]({img_data$Source[i]}) {img_data$BibTex[i]}"),
        glue::glue("License: [{stringr::str_remove(img_data$License[i], 'https://')}]({img_data$License[i]})")
      )
    )
  )
}
```