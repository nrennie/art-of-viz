---
fig-width: 6
fig-height: 4
fig-align: center
fig-dpi: 300
filters:
  - line-highlight
execute: 
  freeze: auto
---

# Technology adoption: making donut charts and gauge charts with {ggforce} {#technology}

## Data

```{r}
#| label: load-technology-data
#| include: false
#| echo: true
tuesdata <- tidytuesdayR::tt_load("2022-07-19")
technology <- tuesdata$technology
```

```{r}
#| label: explore-technology
head(technology)
```

what might be interesting

## Initial exloration

some initial base R exploratory plots

Let's look at something more specific


We can get a list of all ISO3 codes with `unique(technology$iso3c)`

```{r}
#| label: filter-technology
# subset of countries to look at further
countries <- c("GBR", "USA", "SWE", "BRA", "NZL", "VEN")

# subset data for specific topic, years, and countries
measles_data <- technology |>
  dplyr::filter(
    label == "% children who received a measles immunization",
    year %in% c(1980, 2010),
    iso3c %in% countries
  )
head(measles_data)
```

photos of sketches

## Data wrangling

```{r}
#| label: wrangle-technology
plot_data <- measles_data |>
  dplyr::select(-c(group, category, variable, label)) |>
  dplyr::mutate(no_value = 100 - value) |>
  tidyr::pivot_longer(
    cols = c(value, no_value),
    names_to = "YN",
    values_to = "perc"
  ) |>
  tidyr::pivot_wider(names_from = "year", values_from = "perc") |>
  dplyr::mutate(YN = factor(YN)) |>
  dplyr::mutate(
    perc_1980 = `1980` / 100,
    perc_2010 = `2010` / 100
  ) |>
  dplyr::select(-c(`1980`, `2010`)) |>
  dplyr::group_by(iso3c) |>
  dplyr::mutate(
    ymax_1980 = cumsum(perc_1980),
    ymax_2010 = cumsum(perc_2010)
  )
head(plot_data)
```

## The {ggforce} extension package

what is ggforce

### Gauge charts

### `geom_arc_bar()`

### Reformatting data

gauge data

this changed from original mutate_at

```{r}
#| label: technology-gauge-data
gauge_data <- plot_data |>
  dplyr::ungroup() |>
  dplyr::mutate(
    ymin_1980 = c(rbind(
      rep(0, length(countries)),
      (dplyr::slice_head(plot_data, n = -1) |> dplyr::pull(ymax_1980))
      ))
  ) |>
  dplyr::mutate(
    ymin_2010 = c(rbind(
      rep(0, length(countries)),
      (dplyr::slice_head(plot_data, n = -1) |> dplyr::pull(ymax_2010))
      ))
  ) |>
  dplyr::group_by(iso3c) |>
  dplyr::mutate(
    dplyr::across(dplyr::starts_with("y", ignore.case = FALSE),
                  ~ scales::rescale(., to = pi * c(-0.5, 0.5), from = 0:1))
  )
```

## Initial plots

basic plot

```{r}
#| label: fig-technology-basic-plot
#| fig-cap: "Initial plot created using `geom_arc_bar()` from {ggforce}, facetted by different countries."
#| warning: false
library(ggplot2)
basic_plot <- ggplot(data = gauge_data) +
  ggforce::geom_arc_bar(
    mapping = aes(
      x0 = 0, y0 = 0,
      r0 = 0.7, r = 1,
      start = ymin_2010, end = ymax_2010,
      fill = YN
    )
  ) +
  ggforce::geom_arc_bar(
    mapping = aes(
      x0 = 0, y0 = 0,
      r0 = 0.2, r = 0.5,
      start = ymin_1980, end = ymax_1980,
      fill = YN
    )
  ) +
  facet_wrap(~iso3c, nrow = 2)
basic_plot
```


### Colors

```{r}
#| label: technology-colors
highlight_col <- "#990c58"
second_col <- "#949398"
bg_col <- "#dedede"
```

add new colors to basic plot

```{r}
#| label: fig-technology-basic-plot2
#| fig-cap: "A second version of the initial plot created using `geom_arc_bar()` from {ggforce}, facetted by different countries, with the outline color changed to a medium grey."
#| source-line-numbers: "9,18"
basic_plot <- ggplot(data = gauge_data) +
  ggforce::geom_arc_bar(
    mapping = aes(
      x0 = 0, y0 = 0,
      r0 = 0.7, r = 1,
      start = ymin_2010, end = ymax_2010,
      fill = YN
    ),
    color = second_col
  ) +
  ggforce::geom_arc_bar(
    mapping = aes(
      x0 = 0, y0 = 0,
      r0 = 0.2, r = 0.5,
      start = ymin_1980, end = ymax_1980,
      fill = YN
    ),
    color = second_col
  ) +
  facet_wrap(~iso3c, nrow = 2)
```

add scale fill


```{r}
#| label: fig-technology-color-plot
#| fig-cap: "Edited version of the previous plot with colors changed from defaults to grey and dark pink."
color_plot <- basic_plot +
  scale_fill_manual(
    breaks = c("value", "no_value"),
    labels = c("Immunised", "Not Immunised"),
    values = c(highlight_col, second_col)
  )
color_plot
```


## Text and fonts

load font

```{r}
#| label: technology-fonts
sysfonts::font_add_google(name = "Ubuntu", family = "ubuntu")
showtext::showtext_auto()
showtext::showtext_opts(dpi = 300)
body_font <- "ubuntu"
```


write text
social to add

```{r}
#| label: technology-text-vars
#| code-overflow: wrap
title <- "Measles Vaccinations"
subtitle <- "The inner bar represents the percentage of children who received a measles immunisation in 1980, whilst the outer bar represents the percentage in 2010. An increase in immunisation levels between 1980 and 2010 is seen across all countries.\n\nN. Rennie | Data: data.nber.org (10.3386/w15319)"
```

text labels

```{r}
#| label: technology-text-df
text_df <- data.frame(
  x = c(0.35, 0.85),
  y = c(-0.1, -0.1),
  label = c(1980, 2010)
)
```


```{r}
#| label: fig-technology-text
#| fig-cap: "Previous plot with additional labels indicating the year on each gauge chart, as well as an added title and subtitle."
text_plot <- color_plot +
  geom_text(
    data = text_df,
    mapping = aes(x = x, y = y, label = label),
    family = body_font,
    size = 6
  ) +
  labs(
    title = title,
    subtitle = subtitle
  )
text_plot
```

## Further styling

tidy up

```{r}
#| label: fig-technology-theme1
#| fig-cap: "Edited version of previous plot with fixed coordinate system to prevent squashing, and all theme elements removed."
theme_plot1 <- text_plot +
  coord_fixed() +
  theme_void(base_family = body_font)
theme_plot1
```

further theming

```{r}
#| label: fig-technology-theme2
#| fig-cap: "Further styling of gauge chart to change background color, prevent overlapping in the subtitle text, and increase the size of the title."
main_plot <- theme_plot1 +
  theme(
    legend.position = "none",
    plot.background = element_rect(fill = bg_col, color = bg_col),
    panel.background = element_rect(fill = bg_col, color = bg_col),
    strip.text = element_text(face = "bold", size = rel(1.2)),
    plot.title = element_text(
      margin = margin(t = 10, b = 10),
      face = "bold",
      size = rel(1.5)
    ),
    plot.subtitle = ggtext::element_textbox_simple(
      maxwidth = 0.8,
      lineheight = 0.5,
      hjust = 0.5,
    ),
    plot.margin = margin(5, 5, 5, 5)
  )
main_plot
```


## Adding a better legend

As we already saw in chapter ..., 

```{r}
#| label: fig-technology-legend
#| fig-cap: "Version of the gauge chart shown only for USA which will act as a legend."
#| fig-width: 3
#| fig-height: 3
legend_plot <- ggplot(data = dplyr::filter(gauge_data, iso3c == "USA")) +
  ggforce::geom_arc_bar(
    mapping = aes(
      x0 = 0, y0 = 0,
      r0 = 0.7, r = 1,
      start = ymin_2010, end = ymax_2010,
      fill = YN
    ),
    color = second_col
  ) +
  ggforce::geom_arc_bar(
    mapping = aes(
      x0 = 0, y0 = 0,
      r0 = 0.2, r = 0.5,
      start = ymin_1980, end = ymax_1980,
      fill = YN
    ),
    color = second_col
  ) +
  geom_text(
    data = text_df,
    mapping = aes(x = x, y = y, label = label),
    family = body_font, size = 6
  ) +
  facet_wrap(~iso3c) +
  scale_fill_manual(
    breaks = c("value", "no_value"),
    labels = c("Immunised", "Not Immunised"),
    values = c(highlight_col, second_col)
  ) +
  labs(title = "How do I read this plot?") +
  coord_fixed() +
  theme_void(base_family = body_font) +
  theme(
    legend.position = "bottom",
    legend.title = element_blank(),
    plot.background = element_rect(
      fill = "transparent", color = "transparent"
    ),
    panel.background = element_rect(
      fill = "transparent", color = "transparent"
    ),
    plot.title = element_text(
      hjust = 0.5,
      face = "italic",
      margin = margin(t = 10, b = 10)
    ),
    plot.margin = margin(5, 5, 5, 5)
  )
legend_plot
```

## Combining legend with {patchwork}

Join with {patchwork}

```{r}
#| label: fig-technology-patchwork
#| fig-cap: "Final gauge chart with overlaid legend in top right corner."
#| warning: false
library(patchwork)
final_plot <- main_plot + inset_element(legend_plot, 0.5, 0.9, 1.1, 1.4) &
  theme(
    plot.background = element_rect(fill = bg_col, color = bg_col),
    panel.background = element_rect(fill = bg_col, color = bg_col)
  )
final_plot
```

As with previous examples, don't be fooled into thinking ... 

some last thoughts

## Reflection

Are gauge charts useful?

What would I change?



