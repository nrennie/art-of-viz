---
fig-width: 5
fig-asp: 0.67
fig-align: center
fig-dpi: 300
filters:
  - line-highlight
execute: 
  freeze: auto
---

# Doctors in an ageing population: making maps with {ggplot2} {#doctors}

In this chapter... we'll learn how to idenifty open data sources, make maps with ggplot2 using maps package, and create .... with a ... to facets.

## Data 

* Bring your own data
* Common data sources
* Doctors data

The ... comes from Our World in Data [@doctors_data]

```{r}
#| label: load-doctors-data
#| output: false
doctors <- readr::read_csv("data/doctors.csv")
```

\index{readr!read\_csv}

## Exploratory work

### Data exploration

what does data look like

### Exploratory sketches

## Preparing a plot

### Data wrangling

```{r}
#| label: doctors-wrangle
#| message: false
doctors <- doctors |>
  dplyr::rename(region = entity, doctors = `Physicians (per 1,000 people)`) |>
  dplyr::select(region, year, doctors) |>
  dplyr::group_by(region) |>
  dplyr::slice_max(year) |>
  dplyr::ungroup()
```

Retrieving map data with {ggplot2}

```{r}
#| label: map-doctors
#| message: false
library(ggplot2)
world <- map_data("world")
length(unique(world$region))
length(unique(doctors$region))
```

Note that `recode` has the rather unusual syntax of old_name = new_name

\index{dplyr!recode}
\index{dplyr!left\_join}

```{r}
#| label: map-doctors-wrangle
plot_data <- doctors |>
  dplyr::mutate(
    region =
      dplyr::recode(region,
        "United Kingdom" = "UK",
        "United States" = "USA",
        "Congo, Dem. Rep." = "Democratic Republic of the Congo",
        "Cote d'Ivoire" = "Ivory Coast",
        "Congo, Rep." = "Republic of Congo"
      )
  )
map_data <- dplyr::left_join(world, plot_data, by = "region") |>
  dplyr::filter(region != "Antarctica")
```


### The first plot

\index{ggplot2!geom\_map}

\index{map}

```{r}
#| label: fig-doctors-basic-plot-1
#| fig-cap: "Map of the world with countries coloured based on number of doctors per 1,000 people. The map looks stretched."
base_plot <- ggplot(
  data = map_data,
  mapping = aes(
    long,
    lat,
    map_id = region,
    fill = doctors
  )
) +
  geom_map(
    map = map_data
  )
base_plot
```

## Advanced styling

### Colours

\index{MetBrewer}

```{r}
#| label: doctors-colours
library(MetBrewer)
col_palette <- met.brewer("Hokusai2", n = 20)
text_col <- col_palette[18]
highlight_col <- col_palette[15]
bg_col <- "#EADEDA"
```

\index{ggplot2!scale\_fill\_gradientn}

```{r}
#| label: fig-doctors-style-plot-1
#| fig-cap: "Map of the world with countries coloured based on number of doctors per 1,000 people, showing a different colour scheme."
col_plot <- base_plot +
  scale_fill_gradientn(
    colours = col_palette,
    limits = c(0, 10),
    breaks = c(0.5, 9.5),
    labels = c("Fewer doctors", "More doctors")
  ) +
  guides(fill = guide_colourbar(ticks = FALSE))
col_plot
```

### Text and fonts

{sysfonts}\index{sysfonts}
{showtext}\index{showtext}

\index{sysfonts!font\_add\_google}
\index{showtext!showtext\_auto}
\index{showtext!showtext\_opts}

```{r}
#| label: doctors-font
sysfonts::font_add_google(name = "Roboto", family = "roboto")
showtext::showtext_auto()
showtext::showtext_opts(dpi = 300)
body_font <- "roboto"
```


```{r}
#| label: doctors-text
title <- "Doctors in an ageing population"
st <- "This map show the number of doctors per thousand people, rescaled by the percentage of the population aged over 70, revealing which countries* may be more likely to struggle in providing care for an elderly population.<br> using most recent available data for each country."
cap <- "**Data**: Our World in Data | **Graphic**: N. Rennie"
```

```{r}
#| label: doctors-style-plot-2
text_plot <- col_plot +
  labs(
    title = title, subtitle = st, caption = cap
  )
```

### Adjusting themes

\index{ggtext!element\_textbox\_simple}

```{r}
#| label: fig-doctors-style-plot-3
#| fig-cap: "Map of the world with countries coloured based on number of doctors per 1,000 people. Styling ..."
library(ggtext)
text_plot +
  theme_void(base_size = 8, base_family = body_font) +
  theme(
    plot.background = element_rect(fill = bg_col, colour = bg_col),
    panel.background = element_rect(fill = bg_col, colour = bg_col),
    plot.title = element_textbox_simple(
      colour = text_col
    ),
    plot.subtitle = element_textbox_simple(
      colour = text_col
    ),
    plot.caption = element_textbox_simple(
      hjust = 0,
      colour = text_col
    ))
```


Box for title facets

\index{ggplot2!facet\_wrap}

```{r}
#| label: doctors-facets
map_data$label <- title
```

While we're here, let's lines of map same colour as bg and a little bit thinner

```{r}
#| label: fig-doctors-style-plot-4
#| fig-cap: "caption"
styled_plot <- ggplot(
  data = map_data,
  mapping = aes(
    long,
    lat,
    map_id = region,
    fill = doctors
  )
) +
  geom_map(
    map = map_data,
    colour = bg_col,
    linewidth = 0.5
  ) +
  scale_fill_gradientn(
    colours = col_palette,
    limits = c(0, 10),
    breaks = c(0.5, 9.5),
    labels = c("Fewer doctors", "More doctors")
  ) +
  guides(fill = guide_colourbar(ticks = FALSE)) +
  labs(
    title = title, subtitle = st, caption = cap
  ) +
  facet_wrap(~label) +
  theme_void(base_size = 8, base_family = body_font) +
  theme(
    plot.background = element_rect(
      fill = bg_col, colour = bg_col),
    panel.background = element_rect(
      fill = bg_col, colour = bg_col),
    plot.title = element_textbox_simple(
      colour = text_col,
      lineheight = 0.5
    ),
    plot.subtitle = element_textbox_simple(
      colour = text_col,
      lineheight = 0.5
    ),
    plot.caption = element_textbox_simple(
      hjust = 0,
      colour = text_col,
      lineheight = 0.5
    ),
    strip.background = element_rect(
      fill = highlight_col, colour = highlight_col))
styled_plot
```

move subtitle text 
Note `legend.position.inside` used to be `legend.position` before ggplot2 3.5.0

```{r}
#| label: fig-doctors-style-plot-5
#| fig-cap: "caption"
styled_plot +
  labs(
    subtitle = NULL, tag = st
  ) +
  theme(
    # move and format the tag (subtitle) text
    plot.tag.position = c(0.03, 0.78),
    plot.tag = element_textbox_simple(
      colour = text_col,
      lineheight = 0.5,
      hjust = 0
    ),
    # change title text colour
    plot.title = element_textbox_simple(
      colour = bg_col,
      lineheight = 0.5
    ),
    # style the legend
    legend.text = element_text(
      colour = text_col,
      lineheight = 0.5,
      hjust = 0.5
    ),
    legend.key.width = unit(2, "cm"),
    legend.key.height = unit(0.3, "cm"),
    legend.position.inside = c(0.645, -0.005),
    legend.title = element_blank(),
    legend.direction = "horizontal",
    plot.margin = margin(0, 0, 10, 0)
  )
```


## Reflection

> Note: ℹ The package "mapproj" is required for `coord_map()`.
✖ Would you like to install it?

1: Yes
2: No

fewer/more labels

::: {.content-visible when-format="html"}

see the making of . If you'd like to read more about {camcorder} - see chapter ... .

![](images/doctors.gif)

:::

