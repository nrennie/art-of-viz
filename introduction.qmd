# Introduction

Welcome to *The #TidyTuesday Cookbook*. Each chapter will cover a different data visualisation, showing: the data exploration process; the choice of data visualisation type; the initial design ideas with hand-drawn sketches; the first build of a plot; and the iterative process of styling plots. Full code will be provided and explained for each step of the creative process.

In this chapter, we'll discuss why you should visualize your data - although by virtue of the fact that you're reading this book, hopefully you're already sold on the general idea! You'll also find out a bit more about where the idea for this book came from and what #TidyTuesday is, alongside a few notes about the R code you'll see in this book.

## Why visualize data?

Data visualization can be a very effective and efficient means of communicating information. Visualizing your data typically serves one of two purposes: (i) as part of exploratory analysis to help uncover discrepancies in data and identify interesting relationships to measure; or (ii) to communicate key insights and messages to a broader audience. The case-study nature of this book means that we'll talk about both of these aspects, though we 'll focus mostly on the second.

Choosing an appropriate type of visualization and making careful choice about design can clarify the message you are trying to convey to a reader. That does not necessarily mean that every chart must follow a set of *rules* and stick to a rigid format. Instead, data visualization is a blend of science and creativity - many of the key *landmark* data visualizations held up as excellent examples don't fit into the standard categories of bar charts, scatter plots, or line graphs. 

That being said, the visualizations in this book are not necessarily always the most effective choice of visualization for the data and relationship shown. Rather, this book aims to show you examples of the end-to-end process of creating data visualizations, with a focus on the technical details of building them in R. You'll see some *hacky* solutions and unusual ideas that you can use to transform your data visualizations.

## What is #TidyTuesday?

\#TidyTuesday\index{TudyTuesday} [@tidytuesday] is a weekly social data project which aims to make learning to work with data easier, by providing real-world datasets. Participants are encouraged to explore the data shared via [GitHub](https://github.com/rfordatascience/tidytuesday) each week, create an output such as a data visualization, and share their output alongside their code, with the community.

After three years of weekly contributions, I've worked with around 150 datasets and created over 150 data visualizations. This book will present a subset of these visualizations, and describe the process used to create them. Each chapter will cover a different data visualization, showing: the data exploration process; the choice of data visualization type; the initial design ideas with hand-drawn sketches; the first build of a plot; and the iterative process of styling plots.

## Background knowledge

This book is primarily aimed at those who wish to develop their data visualization skills in R. Readers of this book may find a basic knowledge of R, more specifically of the {tidyverse} ecosystem, useful though all code used in examples is fully explained. Readers do not need to be experienced in {ggplot2}, though this book will also be of interest to those who are. Readers of this book will be of interest to those who are already familiar with R (including {ggplot2}), and wish to develop their skills in designing data visualizations further. It will also be of interest to those who already design data visualizations using other tools, and want to learn how to do the equivalent in R.

## A note about R code

All code in this was created using R version 4.3.0, and a complete list of package versions can be found in the Appendix.

### Base R pipe vs {magrittr} pipe

In R, the pipe operator *takes the thing on its left and passes it along to the function on its right* [@r4ds]. You can find a full description of the pipe operator in [R for Data Science](https://r4ds.hadley.nz/data-transform#sec-the-pipe). The pipe\index{pipe} (`%>%`) was first introduced to R via the {magrittr}\index{magrittr} package. Since version 4.1.0 of R, a version of the pipe (`|>`) has existed in base R. The base R version of the pipe is used throughout the book. Although there are some difference between the two version of the pipe, in this book, they can be used interchangeably.

### Namespacing

Namespacing\index{namespacing} (the pre-fixing of functions with the package name and `::`) is used for all packages except {ggplot2} and base R packages. Namespacing is useful for two reasons (i) from a learning perspective, it makes it easier to recognise where functions come from and how they connect together, and (ii) from a programming perspective, it reduces conflicts and errors - something we all want less of! 

### Changes to from earlier versions

You may notice that some of the final images differ slightly from those initially created and published on social media. You might also find some small differences in the code used to produce them if you compare the contents of this book to original scripts in the [GitHub repository](https://github.com/nrennie/tidytuesday). These differences are likely due to one of four reasons: 

* packages have since been updated and code has been changed to use newer syntax;
* some aspects have been omitted from a visualization to avoid explaining *everything* in Chapter 1 - but those aspects are all covered and linked to in later chapters;
* after many years of practice, there may be more efficient ways of re-writing code from some of the earlier plots. Any changes are clearly labelled and discussed;
* some images may be different due to copyright reasons.

