---
filters:
  - line-highlight
execute: 
  freeze: auto
fig-width: 5
fig-asp: 0.92
---

```{r}
#| echo: false
#| eval: true
#| file: R/load_font_awesome.R
```

```{r}
#| echo: false
#| eval: true
#| file: R/social_caption.R
```

# Time Zones: Spatial data and mapping with {sf} {#sec-time-zones}

## Data

```{r}
#| label: load-timezones-data-show
#| eval: false
#| echo: true
tuesdata <- tidytuesdayR::tt_load("2023-03-28")
timezones <- tuesdata$timezones
```

```{r}
#| label: load-timezones-data-hide
#| output: false
#| echo: false
#| eval: true
timezones <- readr::read_csv("data/timezones.csv")
```

## Exploratory work

### Data exploration

### Exploratory sketches

## Preparing a plot

### Data wrangling

As in @sec-doctors, we need a bg map. In chap8 we used `map_data` from {ggplot2} Here, let's look at an alternative: {rnaturalearth}

```{r}
#| label: timezones-map-data
world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")
```

### Spatial objects with {sf}

```{r}
#| label: timezones-sf
timezones_sf <- timezones |>
  dplyr::select(-comments) |>
  sf::st_as_sf(coords = c("longitude", "latitude")) |>
  sf::st_set_crs(4326) |>
  tidyr::separate(zone, into = c("continent", "place"), sep = "/")
```


### The first plot

```{r}
#| label: fig-timezones-basic-map
#| fig-cap: "test"
library(ggplot2)
basic_map <- ggplot() +
  geom_sf(data = world) +
  geom_sf(
    data = timezones_sf,
    mapping = aes(colour = continent)
  )
basic_map
```

## Custom legend

### Colours

```{r}
#| label: timezones-colors
text_col <- "#2F4F4F"
highlight_col <- "#508080"
bg_col <- "#F0F5F5"
col_palette <- c(
  "Africa" = "#CC6677",
  "America" = "#332288",
  "Antarctica" = "#DDCC77",
  "Asia" = "#117733",
  "Atlantic" = "#88CCEE",
  "Australia" = "#882255",
  "Europe" = "#44AA99",
  "Indian" = "#999933",
  "Pacific" = "#AA4499"
)
```

### Fonts


```{r}
#| label: timezones-fonts
sysfonts::font_add_google("Commissioner", "commissioner")
sysfonts::font_add_google("Fraunces", "fraunces")
showtext::showtext_auto()
showtext::showtext_opts(dpi = 300)
body_font <- "commissioner"
title_font <- "fraunces"
```

### Bar chart legend

```{r}
#| label: timezones-bar-data
bar_data <- timezones_sf |>
  dplyr::group_by(continent) |>
  dplyr::summarise(n = dplyr::n()) |>
  sf::st_drop_geometry()
```


```{r}
#| label: fig-timezones-bar-plot-1
#| fig-cap: "test"
bar_plot <-
  ggplot(
    data = bar_data,
    mapping = aes(
      x = continent, y = n,
      fill = continent, label = continent
    )
  ) +
  geom_col() +
  scale_fill_manual(
    values = col_palette
  )
bar_plot
```

```{r}
#| label: fig-timezones-bar-plot-2
#| fig-cap: "test"
legend_plot <- bar_plot +
  ggtext::geom_textbox(
    mapping = aes(
      hjust = dplyr::case_when(
        n > 45 ~ 1,
        TRUE ~ 0
      ),
      halign = dplyr::case_when(
        n > 45 ~ 1,
        TRUE ~ 0
      ),
      colour = dplyr::case_when(
        n > 45 ~ I(bg_col),
        TRUE ~ I(text_col)
      )
    ),
    family = body_font,
    size = 3,
    fill = NA,
    box.colour = NA,
    orientation = "left-rotated"
  ) +
  theme_void() +
  theme(
    legend.position = "none"
  )
legend_plot
```

## Advanced styling

### Text 

```{r}
#| label: timezones-text-social
social <- social_caption(
  bg_color = bg_col,
  icon_color = highlight_col,
  font_color = text_col
)
```

```{r}
#| label: timezones-text
cap <- glue::glue("Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude. For every one-hour time, a point on the earth moves through 15 degrees of longitude. Each point relates to one of 337 time zones listed in the IANA time zone database. The colours show which time zones are in
<span style='color:{col_palette[\"Africa\"]};'>Africa</span>,
<span style='color:{col_palette[\"America\"]};'>America</span>,
<span style='color:{col_palette[\"Antarctica\"]};'>Antarctica</span>,
<span style='color:{col_palette[\"Asia\"]};'>Asia</span>,
<span style='color:{col_palette[\"Atlantic\"]};'>Atlantic</span>,
<span style='color:{col_palette[\"Australia\"]};'>Australia</span>,
<span style='color:{col_palette[\"Europe\"]};'>Europe</span>,
<span style='color:{col_palette[\"Indian\"]};'>Indian</span>, and
<span style='color:{col_palette[\"Pacific\"]};'>Pacific</span> zones.<br>**Data**: IANA tz database<br>")
title <- glue::glue("<span style='font-size:12pt;font-family:{title_font};color:{text_col};'>Time Zones of the World</span><br>")
caption <- paste0(title, cap)
```

### Adjusting themes

```{r}
#| label: fig-timezones-basic-map-2
#| fig-cap: "test"
basic_map <- ggplot() +
  geom_sf(
    data = world,
    colour = text_col,
    fill = alpha(highlight_col, 0.3)
  ) +
  geom_sf(
    data = timezones_sf,
    mapping = aes(colour = continent),
    size = 0.4,
  ) +
  geom_sf(
    data = timezones_sf,
    mapping = aes(colour = continent),
    size = 1.6,
    pch = 21,
    fill = "transparent"
  )
basic_map
```

apply colours and text

```{r}
#| label: timezones-style-map-1
col_map <- basic_map +
  scale_colour_manual(
    values = col_palette
  )
```

add lines

```{r}
#| label: fig-timezones-style-map-2
#| fig-cap: "test"
line_map <- col_map +
  geom_segment(
    data = data.frame(x = seq(-180, 180, by = 15)),
    mapping = aes(x = x, y = -170, xend = x, yend = 100),
    linewidth = 0.2,
    colour = alpha(highlight_col, 0.2)
  ) +
  scale_x_continuous(
    breaks = seq(-180, 180, by = 15),
    limits = c(-190, 190)
  ) +
  coord_sf(expand = FALSE)
line_map
```

```{r}
#| label: timezones-style-map-3
text_map <- line_map +
  ggtext::geom_textbox(
    data = data.frame(x = 0, y = 93, label = social),
    aes(x = x, y = y, label = label),
    family = body_font,
    size = 2.5,
    fill = NA,
    halign = 0.5,
    hjust = 0.5,
    valign = 0,
    box.colour = NA
  ) +
  labs(tag = caption)
```


```{r}
#| label: fig-timezones-style-map-4
#| fig-cap: "test"
styled_map <- text_map +
  theme_void(base_size = 6, base_family = body_font) +
  theme(
    legend.position = "none",
    plot.margin = margin(0, 0, 0, 0),
    plot.background = element_rect(
      fill = bg_col,
      colour = bg_col
    ),
    panel.background = element_rect(
      fill = bg_col, colour = bg_col
    ),
    # add and position text
    plot.tag.position = c(-0.01, 0.12),
    plot.tag = ggtext::element_textbox_simple(
      colour = text_col,
      hjust = 0,
      maxwidth = grid::unit(200, "pt"),
      margin = margin(
        l = 15, t = 5, b = 10
      )
    )
  )
styled_map
```

### Join with {patchwork}

```{r}
#| label: fig-timezones-final-plot
#| fig-cap: "test"
library(patchwork)
styled_map + inset_element(legend_plot, 0.55, 0, 1, 0.3) &
  theme(plot.margin = margin(0, 0, 0, 0))
```


## Reflection

* vert lines don't need to go through text as well

* bars could do with some exaplantion

::: {.content-visible when-format="html"}

Each plot created during the process of developing the original version of this visualisation was captured using {camcorder}, and is shown in the gif below. If you'd like to learn more about how {camcorder} can be used in the data visualisation process, see @sec-camcorder.

![](images/time-zones.gif){fig-align="center"}

:::
